State 109 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program func_def

    3 func_def: header local_defs block

    4 header: T_FUN T_ID '(' fpar_def_list ')' ':' ret_type

    5 fpar_def_list: fpar_def
    6              | fpar_def_list ';' fpar_def

    7 fpar_def: ref_opt id_list ':' fpar_type

    8 ref_opt: %empty
    9        | T_REF

   10 id_list: T_ID
   11        | id_list ',' T_ID

   12 data_type: T_INT
   13          | T_CHAR

   14 type: data_type
   15     | data_type '[' T_NUM ']'

   16 ret_type: data_type
   17         | T_NOTHING

   18 fpar_type: data_type
   19          | data_type '[' ']'
   20          | data_type '[' T_NUM ']'

   21 local_defs: %empty
   22           | local_defs local_def

   23 local_def: func_def
   24          | func_decl
   25          | var_def

   26 var_def: T_VAR id_list ':' type ';'

   27 func_decl: header ';'

   28 stmt: ';'
   29     | l_value "<-" expr ';'
   30     | block
   31     | func_call ';'
   32     | T_IF cond T_THEN stmt if_else_opt
   33     | T_WHILE cond T_DO stmt
   34     | T_RETURN expr_opt ';'

   35 if_else_opt: %empty
   36            | T_ELSE stmt

   37 expr_opt: %empty
   38         | expr

   39 block: '{' stmt_list '}'

   40 stmt_list: %empty
   41          | stmt_list stmt

   42 func_call: T_ID '(' expr_list_opt ')'

   43 expr_list_opt: %empty
   44              | expr_list

   45 expr_list: expr
   46          | expr_list ',' expr

   47 l_value: T_ID
   48        | T_STR
   49        | l_value '[' expr ']'

   50 expr: T_NUM
   51     | T_FIXED_CHAR
   52     | l_value
   53     | func_call
   54     | '(' expr ')'
   55     | '+' expr
   56     | '-' expr
   57     | expr '+' expr
   58     | expr '-' expr
   59     | expr '*' expr
   60     | expr T_DIV expr
   61     | expr T_MOD expr
   62     | expr T_SEPARATOR

   63 cond: '(' cond ')'
   64     | T_NOT cond
   65     | cond T_AND cond
   66     | cond T_OR cond
   67     | expr T_OPERATOR expr


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 42 54 63
    ')' (41) 4 42 54 63
    '*' (42) 59
    '+' (43) 55 57
    ',' (44) 11 46
    '-' (45) 56 58
    ':' (58) 4 7 26
    ';' (59) 6 26 27 28 29 31 34
    '[' (91) 15 19 20 49
    ']' (93) 15 19 20 49
    '{' (123) 39
    '}' (125) 39
    error (256)
    T_AND (258) 65
    T_CHAR (259) 13
    T_DIV (260) 60
    T_DO (261) 33
    T_ELSE (262) 36
    T_FUN (263) 4
    T_IF (264) 32
    T_INT (265) 12
    T_MOD (266) 61
    T_NOT (267) 64
    T_NOTHING (268) 17
    T_OR (269) 66
    T_REF (270) 9
    T_RETURN (271) 34
    T_THEN (272) 32
    T_VAR (273) 26
    T_WHILE (274) 33
    T_ID (275) 4 10 11 42 47
    T_NUM (276) 15 20 50
    T_FIXED_CHAR (277) 51
    T_STR (278) 48
    T_OPERATOR (279) 67
    T_SEPARATOR (280) 62
    UMINUS (281)
    "<-" (282) 29


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    program (41)
        on left: 1 2
        on right: 0 2
    func_def (42)
        on left: 3
        on right: 2 23
    header (43)
        on left: 4
        on right: 3 27
    fpar_def_list (44)
        on left: 5 6
        on right: 4 6
    fpar_def (45)
        on left: 7
        on right: 5 6
    ref_opt (46)
        on left: 8 9
        on right: 7
    id_list (47)
        on left: 10 11
        on right: 7 11 26
    data_type (48)
        on left: 12 13
        on right: 14 15 16 18 19 20
    type (49)
        on left: 14 15
        on right: 26
    ret_type (50)
        on left: 16 17
        on right: 4
    fpar_type (51)
        on left: 18 19 20
        on right: 7
    local_defs (52)
        on left: 21 22
        on right: 3 22
    local_def (53)
        on left: 23 24 25
        on right: 22
    var_def (54)
        on left: 26
        on right: 25
    func_decl (55)
        on left: 27
        on right: 24
    stmt (56)
        on left: 28 29 30 31 32 33 34
        on right: 32 33 36 41
    if_else_opt (57)
        on left: 35 36
        on right: 32
    expr_opt (58)
        on left: 37 38
        on right: 34
    block (59)
        on left: 39
        on right: 3 30
    stmt_list (60)
        on left: 40 41
        on right: 39 41
    func_call (61)
        on left: 42
        on right: 31 53
    expr_list_opt (62)
        on left: 43 44
        on right: 42
    expr_list (63)
        on left: 45 46
        on right: 44 46
    l_value (64)
        on left: 47 48 49
        on right: 29 49 52
    expr (65)
        on left: 50 51 52 53 54 55 56 57 58 59 60 61 62
        on right: 29 38 45 46 49 54 55 56 57 58 59 60 61 62 67
    cond (66)
        on left: 63 64 65 66 67
        on right: 32 33 63 64 65 66


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . func_def

    $end   shift, and go to state 2
    T_FUN  shift, and go to state 3

    func_def  go to state 4
    header    go to state 5


State 2

    0 $accept: program $end .

    $default  accept


State 3

    4 header: T_FUN . T_ID '(' fpar_def_list ')' ':' ret_type

    T_ID  shift, and go to state 6


State 4

    2 program: program func_def .

    $default  reduce using rule 2 (program)


State 5

    3 func_def: header . local_defs block

    $default  reduce using rule 21 (local_defs)

    local_defs  go to state 7


State 6

    4 header: T_FUN T_ID . '(' fpar_def_list ')' ':' ret_type

    '('  shift, and go to state 8


State 7

    3 func_def: header local_defs . block
   22 local_defs: local_defs . local_def

    T_FUN  shift, and go to state 3
    T_VAR  shift, and go to state 9
    '{'    shift, and go to state 10

    func_def   go to state 11
    header     go to state 12
    local_def  go to state 13
    var_def    go to state 14
    func_decl  go to state 15
    block      go to state 16


State 8

    4 header: T_FUN T_ID '(' . fpar_def_list ')' ':' ret_type

    T_REF  shift, and go to state 17

    $default  reduce using rule 8 (ref_opt)

    fpar_def_list  go to state 18
    fpar_def       go to state 19
    ref_opt        go to state 20


State 9

   26 var_def: T_VAR . id_list ':' type ';'

    T_ID  shift, and go to state 21

    id_list  go to state 22


State 10

   39 block: '{' . stmt_list '}'

    $default  reduce using rule 40 (stmt_list)

    stmt_list  go to state 23


State 11

   23 local_def: func_def .

    $default  reduce using rule 23 (local_def)


State 12

    3 func_def: header . local_defs block
   27 func_decl: header . ';'

    ';'  shift, and go to state 24

    $default  reduce using rule 21 (local_defs)

    local_defs  go to state 7


State 13

   22 local_defs: local_defs local_def .

    $default  reduce using rule 22 (local_defs)


State 14

   25 local_def: var_def .

    $default  reduce using rule 25 (local_def)


State 15

   24 local_def: func_decl .

    $default  reduce using rule 24 (local_def)


State 16

    3 func_def: header local_defs block .

    $default  reduce using rule 3 (func_def)


State 17

    9 ref_opt: T_REF .

    $default  reduce using rule 9 (ref_opt)


State 18

    4 header: T_FUN T_ID '(' fpar_def_list . ')' ':' ret_type
    6 fpar_def_list: fpar_def_list . ';' fpar_def

    ')'  shift, and go to state 25
    ';'  shift, and go to state 26


State 19

    5 fpar_def_list: fpar_def .

    $default  reduce using rule 5 (fpar_def_list)


State 20

    7 fpar_def: ref_opt . id_list ':' fpar_type

    T_ID  shift, and go to state 21

    id_list  go to state 27


State 21

   10 id_list: T_ID .

    $default  reduce using rule 10 (id_list)


State 22

   11 id_list: id_list . ',' T_ID
   26 var_def: T_VAR id_list . ':' type ';'

    ':'  shift, and go to state 28
    ','  shift, and go to state 29


State 23

   39 block: '{' stmt_list . '}'
   41 stmt_list: stmt_list . stmt

    T_IF      shift, and go to state 30
    T_RETURN  shift, and go to state 31
    T_WHILE   shift, and go to state 32
    T_ID      shift, and go to state 33
    T_STR     shift, and go to state 34
    ';'       shift, and go to state 35
    '{'       shift, and go to state 10
    '}'       shift, and go to state 36

    stmt       go to state 37
    block      go to state 38
    func_call  go to state 39
    l_value    go to state 40


State 24

   27 func_decl: header ';' .

    $default  reduce using rule 27 (func_decl)


State 25

    4 header: T_FUN T_ID '(' fpar_def_list ')' . ':' ret_type

    ':'  shift, and go to state 41


State 26

    6 fpar_def_list: fpar_def_list ';' . fpar_def

    T_REF  shift, and go to state 17

    $default  reduce using rule 8 (ref_opt)

    fpar_def  go to state 42
    ref_opt   go to state 20


State 27

    7 fpar_def: ref_opt id_list . ':' fpar_type
   11 id_list: id_list . ',' T_ID

    ':'  shift, and go to state 43
    ','  shift, and go to state 29


State 28

   26 var_def: T_VAR id_list ':' . type ';'

    T_CHAR  shift, and go to state 44
    T_INT   shift, and go to state 45

    data_type  go to state 46
    type       go to state 47


State 29

   11 id_list: id_list ',' . T_ID

    T_ID  shift, and go to state 48


State 30

   32 stmt: T_IF . cond T_THEN stmt if_else_opt

    T_NOT         shift, and go to state 49
    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 54

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 57
    cond       go to state 58


State 31

   34 stmt: T_RETURN . expr_opt ';'

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    $default  reduce using rule 37 (expr_opt)

    expr_opt   go to state 60
    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 61


State 32

   33 stmt: T_WHILE . cond T_DO stmt

    T_NOT         shift, and go to state 49
    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 54

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 57
    cond       go to state 62


State 33

   42 func_call: T_ID . '(' expr_list_opt ')'
   47 l_value: T_ID .

    '('  shift, and go to state 63

    $default  reduce using rule 47 (l_value)


State 34

   48 l_value: T_STR .

    $default  reduce using rule 48 (l_value)


State 35

   28 stmt: ';' .

    $default  reduce using rule 28 (stmt)


State 36

   39 block: '{' stmt_list '}' .

    $default  reduce using rule 39 (block)


State 37

   41 stmt_list: stmt_list stmt .

    $default  reduce using rule 41 (stmt_list)


State 38

   30 stmt: block .

    $default  reduce using rule 30 (stmt)


State 39

   31 stmt: func_call . ';'

    ';'  shift, and go to state 64


State 40

   29 stmt: l_value . "<-" expr ';'
   49 l_value: l_value . '[' expr ']'

    '['   shift, and go to state 65
    "<-"  shift, and go to state 66


State 41

    4 header: T_FUN T_ID '(' fpar_def_list ')' ':' . ret_type

    T_CHAR     shift, and go to state 44
    T_INT      shift, and go to state 45
    T_NOTHING  shift, and go to state 67

    data_type  go to state 68
    ret_type   go to state 69


State 42

    6 fpar_def_list: fpar_def_list ';' fpar_def .

    $default  reduce using rule 6 (fpar_def_list)


State 43

    7 fpar_def: ref_opt id_list ':' . fpar_type

    T_CHAR  shift, and go to state 44
    T_INT   shift, and go to state 45

    data_type  go to state 70
    fpar_type  go to state 71


State 44

   13 data_type: T_CHAR .

    $default  reduce using rule 13 (data_type)


State 45

   12 data_type: T_INT .

    $default  reduce using rule 12 (data_type)


State 46

   14 type: data_type .
   15     | data_type . '[' T_NUM ']'

    '['  shift, and go to state 72

    $default  reduce using rule 14 (type)


State 47

   26 var_def: T_VAR id_list ':' type . ';'

    ';'  shift, and go to state 73


State 48

   11 id_list: id_list ',' T_ID .

    $default  reduce using rule 11 (id_list)


State 49

   64 cond: T_NOT . cond

    T_NOT         shift, and go to state 49
    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 54

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 57
    cond       go to state 74


State 50

   50 expr: T_NUM .

    $default  reduce using rule 50 (expr)


State 51

   51 expr: T_FIXED_CHAR .

    $default  reduce using rule 51 (expr)


State 52

   55 expr: '+' . expr

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 75


State 53

   56 expr: '-' . expr

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 76


State 54

   54 expr: '(' . expr ')'
   63 cond: '(' . cond ')'

    T_NOT         shift, and go to state 49
    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 54

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 77
    cond       go to state 78


State 55

   53 expr: func_call .

    $default  reduce using rule 53 (expr)


State 56

   49 l_value: l_value . '[' expr ']'
   52 expr: l_value .

    '['  shift, and go to state 65

    $default  reduce using rule 52 (expr)


State 57

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR
   67 cond: expr . T_OPERATOR expr

    T_DIV        shift, and go to state 79
    T_MOD        shift, and go to state 80
    T_OPERATOR   shift, and go to state 81
    T_SEPARATOR  shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85


State 58

   32 stmt: T_IF cond . T_THEN stmt if_else_opt
   65 cond: cond . T_AND cond
   66     | cond . T_OR cond

    T_AND   shift, and go to state 86
    T_OR    shift, and go to state 87
    T_THEN  shift, and go to state 88


State 59

   54 expr: '(' . expr ')'

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 89


State 60

   34 stmt: T_RETURN expr_opt . ';'

    ';'  shift, and go to state 90


State 61

   38 expr_opt: expr .
   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR

    T_DIV        shift, and go to state 79
    T_MOD        shift, and go to state 80
    T_SEPARATOR  shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85

    $default  reduce using rule 38 (expr_opt)


State 62

   33 stmt: T_WHILE cond . T_DO stmt
   65 cond: cond . T_AND cond
   66     | cond . T_OR cond

    T_AND  shift, and go to state 86
    T_DO   shift, and go to state 91
    T_OR   shift, and go to state 87


State 63

   42 func_call: T_ID '(' . expr_list_opt ')'

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    $default  reduce using rule 43 (expr_list_opt)

    func_call      go to state 55
    expr_list_opt  go to state 92
    expr_list      go to state 93
    l_value        go to state 56
    expr           go to state 94


State 64

   31 stmt: func_call ';' .

    $default  reduce using rule 31 (stmt)


State 65

   49 l_value: l_value '[' . expr ']'

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 95


State 66

   29 stmt: l_value "<-" . expr ';'

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 96


State 67

   17 ret_type: T_NOTHING .

    $default  reduce using rule 17 (ret_type)


State 68

   16 ret_type: data_type .

    $default  reduce using rule 16 (ret_type)


State 69

    4 header: T_FUN T_ID '(' fpar_def_list ')' ':' ret_type .

    $default  reduce using rule 4 (header)


State 70

   18 fpar_type: data_type .
   19          | data_type . '[' ']'
   20          | data_type . '[' T_NUM ']'

    '['  shift, and go to state 97

    $default  reduce using rule 18 (fpar_type)


State 71

    7 fpar_def: ref_opt id_list ':' fpar_type .

    $default  reduce using rule 7 (fpar_def)


State 72

   15 type: data_type '[' . T_NUM ']'

    T_NUM  shift, and go to state 98


State 73

   26 var_def: T_VAR id_list ':' type ';' .

    $default  reduce using rule 26 (var_def)


State 74

   64 cond: T_NOT cond .
   65     | cond . T_AND cond
   66     | cond . T_OR cond

    $default  reduce using rule 64 (cond)


State 75

   55 expr: '+' expr .
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR

    T_SEPARATOR  shift, and go to state 82

    $default  reduce using rule 55 (expr)


State 76

   56 expr: '-' expr .
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR

    T_SEPARATOR  shift, and go to state 82

    $default  reduce using rule 56 (expr)


State 77

   54 expr: '(' expr . ')'
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR
   67 cond: expr . T_OPERATOR expr

    T_DIV        shift, and go to state 79
    T_MOD        shift, and go to state 80
    T_OPERATOR   shift, and go to state 81
    T_SEPARATOR  shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85
    ')'          shift, and go to state 99


State 78

   63 cond: '(' cond . ')'
   65     | cond . T_AND cond
   66     | cond . T_OR cond

    T_AND  shift, and go to state 86
    T_OR   shift, and go to state 87
    ')'    shift, and go to state 100


State 79

   60 expr: expr T_DIV . expr

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 101


State 80

   61 expr: expr T_MOD . expr

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 102


State 81

   67 cond: expr T_OPERATOR . expr

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 103


State 82

   62 expr: expr T_SEPARATOR .

    $default  reduce using rule 62 (expr)


State 83

   57 expr: expr '+' . expr

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 104


State 84

   58 expr: expr '-' . expr

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 105


State 85

   59 expr: expr '*' . expr

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 106


State 86

   65 cond: cond T_AND . cond

    T_NOT         shift, and go to state 49
    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 54

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 57
    cond       go to state 107


State 87

   66 cond: cond T_OR . cond

    T_NOT         shift, and go to state 49
    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 54

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 57
    cond       go to state 108


State 88

   32 stmt: T_IF cond T_THEN . stmt if_else_opt

    T_IF      shift, and go to state 30
    T_RETURN  shift, and go to state 31
    T_WHILE   shift, and go to state 32
    T_ID      shift, and go to state 33
    T_STR     shift, and go to state 34
    ';'       shift, and go to state 35
    '{'       shift, and go to state 10

    stmt       go to state 109
    block      go to state 38
    func_call  go to state 39
    l_value    go to state 40


State 89

   54 expr: '(' expr . ')'
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR

    T_DIV        shift, and go to state 79
    T_MOD        shift, and go to state 80
    T_SEPARATOR  shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85
    ')'          shift, and go to state 99


State 90

   34 stmt: T_RETURN expr_opt ';' .

    $default  reduce using rule 34 (stmt)


State 91

   33 stmt: T_WHILE cond T_DO . stmt

    T_IF      shift, and go to state 30
    T_RETURN  shift, and go to state 31
    T_WHILE   shift, and go to state 32
    T_ID      shift, and go to state 33
    T_STR     shift, and go to state 34
    ';'       shift, and go to state 35
    '{'       shift, and go to state 10

    stmt       go to state 110
    block      go to state 38
    func_call  go to state 39
    l_value    go to state 40


State 92

   42 func_call: T_ID '(' expr_list_opt . ')'

    ')'  shift, and go to state 111


State 93

   44 expr_list_opt: expr_list .
   46 expr_list: expr_list . ',' expr

    ','  shift, and go to state 112

    $default  reduce using rule 44 (expr_list_opt)


State 94

   45 expr_list: expr .
   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR

    T_DIV        shift, and go to state 79
    T_MOD        shift, and go to state 80
    T_SEPARATOR  shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85

    $default  reduce using rule 45 (expr_list)


State 95

   49 l_value: l_value '[' expr . ']'
   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR

    T_DIV        shift, and go to state 79
    T_MOD        shift, and go to state 80
    T_SEPARATOR  shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85
    ']'          shift, and go to state 113


State 96

   29 stmt: l_value "<-" expr . ';'
   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR

    T_DIV        shift, and go to state 79
    T_MOD        shift, and go to state 80
    T_SEPARATOR  shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85
    ';'          shift, and go to state 114


State 97

   19 fpar_type: data_type '[' . ']'
   20          | data_type '[' . T_NUM ']'

    T_NUM  shift, and go to state 115
    ']'    shift, and go to state 116


State 98

   15 type: data_type '[' T_NUM . ']'

    ']'  shift, and go to state 117


State 99

   54 expr: '(' expr ')' .

    $default  reduce using rule 54 (expr)


State 100

   63 cond: '(' cond ')' .

    $default  reduce using rule 63 (cond)


State 101

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   60     | expr T_DIV expr .
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR

    T_SEPARATOR  shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85

    $default  reduce using rule 60 (expr)


State 102

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   61     | expr T_MOD expr .
   62     | expr . T_SEPARATOR

    T_SEPARATOR  shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85

    $default  reduce using rule 61 (expr)


State 103

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR
   67 cond: expr T_OPERATOR expr .

    T_DIV        shift, and go to state 79
    T_MOD        shift, and go to state 80
    T_SEPARATOR  shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85

    $default  reduce using rule 67 (cond)


State 104

   57 expr: expr . '+' expr
   57     | expr '+' expr .
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR

    T_SEPARATOR  shift, and go to state 82
    '*'          shift, and go to state 85

    $default  reduce using rule 57 (expr)


State 105

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   58     | expr '-' expr .
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR

    T_SEPARATOR  shift, and go to state 82
    '*'          shift, and go to state 85

    $default  reduce using rule 58 (expr)


State 106

   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   59     | expr '*' expr .
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR

    T_SEPARATOR  shift, and go to state 82

    $default  reduce using rule 59 (expr)


State 107

   65 cond: cond . T_AND cond
   65     | cond T_AND cond .
   66     | cond . T_OR cond

    $default  reduce using rule 65 (cond)


State 108

   65 cond: cond . T_AND cond
   66     | cond . T_OR cond
   66     | cond T_OR cond .

    T_AND  shift, and go to state 86

    $default  reduce using rule 66 (cond)


State 109

   32 stmt: T_IF cond T_THEN stmt . if_else_opt

    T_ELSE  shift, and go to state 118

    T_ELSE    [reduce using rule 35 (if_else_opt)]
    $default  reduce using rule 35 (if_else_opt)

    if_else_opt  go to state 119


State 110

   33 stmt: T_WHILE cond T_DO stmt .

    $default  reduce using rule 33 (stmt)


State 111

   42 func_call: T_ID '(' expr_list_opt ')' .

    $default  reduce using rule 42 (func_call)


State 112

   46 expr_list: expr_list ',' . expr

    T_ID          shift, and go to state 33
    T_NUM         shift, and go to state 50
    T_FIXED_CHAR  shift, and go to state 51
    T_STR         shift, and go to state 34
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '('           shift, and go to state 59

    func_call  go to state 55
    l_value    go to state 56
    expr       go to state 120


State 113

   49 l_value: l_value '[' expr ']' .

    $default  reduce using rule 49 (l_value)


State 114

   29 stmt: l_value "<-" expr ';' .

    $default  reduce using rule 29 (stmt)


State 115

   20 fpar_type: data_type '[' T_NUM . ']'

    ']'  shift, and go to state 121


State 116

   19 fpar_type: data_type '[' ']' .

    $default  reduce using rule 19 (fpar_type)


State 117

   15 type: data_type '[' T_NUM ']' .

    $default  reduce using rule 15 (type)


State 118

   36 if_else_opt: T_ELSE . stmt

    T_IF      shift, and go to state 30
    T_RETURN  shift, and go to state 31
    T_WHILE   shift, and go to state 32
    T_ID      shift, and go to state 33
    T_STR     shift, and go to state 34
    ';'       shift, and go to state 35
    '{'       shift, and go to state 10

    stmt       go to state 122
    block      go to state 38
    func_call  go to state 39
    l_value    go to state 40


State 119

   32 stmt: T_IF cond T_THEN stmt if_else_opt .

    $default  reduce using rule 32 (stmt)


State 120

   46 expr_list: expr_list ',' expr .
   57 expr: expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . T_DIV expr
   61     | expr . T_MOD expr
   62     | expr . T_SEPARATOR

    T_DIV        shift, and go to state 79
    T_MOD        shift, and go to state 80
    T_SEPARATOR  shift, and go to state 82
    '+'          shift, and go to state 83
    '-'          shift, and go to state 84
    '*'          shift, and go to state 85

    $default  reduce using rule 46 (expr_list)


State 121

   20 fpar_type: data_type '[' T_NUM ']' .

    $default  reduce using rule 20 (fpar_type)


State 122

   36 if_else_opt: T_ELSE stmt .

    $default  reduce using rule 36 (if_else_opt)
